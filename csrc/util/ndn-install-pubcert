#!/usr/bin/env bash

D=`dirname "$0"`
CCN_CCNBTOXML=ccn_ccnbtoxml

OPENSSL=openssl
HEXDUMP=hexdump
if [ `uname` == "Linux" ]; then
    BASE64="base64 -i"
else
    BASE64="base64"
fi
SED=sed
XXD=xxd


function usage {
  if [ "x$1" != "x" ]; then
    echo -e $1 >&2
  fi
  cat <<EOF
Usage:
    $0 [-h] [-f] <pubcert-file>

        The script performs the following operations:
          - reads <pubcert-file>
          - checks if pubcert file corresponds to .ccnx_keystore
          - installs pubcert file to .ccnx_keystore.pubcert (will not overwrite unless -f is specified)
EOF

  exit 1
}

FORCE=0

while getopts "hf" flag; do
    case "$flag" in
        f)
            FORCE=1
            ;;
        h | ?)
            usage
            ;;
    esac
done

PUBCERT_FILE=${@:$OPTIND:1}

if [ "x$PUBCERT_FILE" == "x" ]; then
    usage "\E[91mERROR: Incorrect parameter usage\E[0m"
fi

if [ ! -f "$PUBCERT_FILE" ]; then
    echo -e "\E[91mERROR: Specified pubcert file [$PUBCERT_FILE] does not exist\E[0m" >&2
    exit 1
fi

export KEY_PASSWORD=${CCNX_KEYSTORE_PASSWORD:-"Th1s1sn0t8g00dp8ssw0rd."}
export CCNX_DIR=${CCNX_DIR:-$HOME/.ccnx}

pubcert_base64=`${CCN_CCNBTOXML} -b "$PUBCERT_FILE" 2>/dev/null | grep ContentObject | head -1 | ${SED} 's|^.*<Content ccnbencoding="base64Binary">\(.*\)</Content>.*$|\1|g'`

keystore_base64=`$OPENSSL pkcs12 -in "$CCNX_DIR/.ccnx_keystore" -password env:KEY_PASSWORD -clcerts -nokeys -nomacver | $OPENSSL x509 -pubkey -noout | $OPENSSL rsa -pubin -pubout -inform PEM -outform DER 2> /dev/null | $BASE64`

if [ "x$pubcert_base64" != "x$keystore_base64" ]; then
    echo -e "\E[91mERROR: Invalid pubcert file [$PUBCERT_FILE] or it does not match key in [$CCNX_DIR/.ccnx_keystore]\E[0m"
    exit 1
fi

DST=$CCNX_DIR/.ccnx_keystore.pubcert

if [ "x$DST" == "x$PUBCERT_FILE" ]; then
    echo -e "\E[91mERROR: Specified pubcert file is already installed\E[0m"
    exit 1
fi

if [ -f "$DST" -a $FORCE -eq 0 ]; then
    echo -e "\E[91mERROR: [$DST] already exists. Please specify -f if you want to overwrite existing file\E[0m"
    exit 1
fi

echo -e "Installing: \E[92m[$PUBCERT_FILE]\E[0m -> \E[94m[$DST]\E[0m"
cp "$PUBCERT_FILE" "$DST"

name=`ndn-pubkey-name`
RETCODE=$?

if [ $RETCODE -ne 0 ]; then
    echo -e "\E[91mFAIL: check if pubcert is correct and try again\E[0m"
    exit 1
fi

echo -e "Public key name: \E[92m$name\E[0m"
exit 0
